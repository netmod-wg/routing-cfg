<?xml version="1.0" encoding="UTF-8"?>
<module name="ietf-routing"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing"
        xmlns:if="urn:ietf:params:xml:ns:yang:ietf-interfaces"
        xmlns:yang="urn:ietf:params:xml:ns:yang:ietf-yang-types"
        xmlns:h="http://www.w3.org/1999/xhtml"
        xmlns:xi="http://www.w3.org/2001/XInclude">
  <namespace uri="urn:ietf:params:xml:ns:yang:ietf-routing"/>
  <prefix value="rt"/>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="ietf-interfaces">
    <prefix value="if"/>
  </import>
  <xi:include href=".tools/bplate/netmod-module.yinx"
              xpointer="xpointer(id('org'))"/>
  <contact>
    <text>
      <xi:include href=".tools/bplate/netmod-module.yinx"
                  xpointer="xpointer(id('contact')/*)"/>
      <h:p>
        Editor:   Ladislav Lhotka<h:br/>
                  &lt;mailto:lhotka@nic.cz&gt;
      </h:p>
    </text>
  </contact>
  <description>
    <text>
      <h:p>
        This YANG module defines essential components for the
	management of a routing subsystem.
      </h:p>
      <xi:include href=".tools/bplate/netmod-module.yinx"
                  xpointer="xpointer(id('desc')/*)"/>
    </text>
  </description>

  <revision date="2011-09-11">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>
        RFC XXXX: A YANG Data Model for Routing Management
      </text>
    </reference>
  </revision>

  <!-- Features -->

  <feature name="multiple-ribs">
    <description>
      <text>
	<h:p>This feature indicates that the server supports
	user-defined RIBs.
	</h:p>
	<h:p>Servers that do not advertise this feature SHOULD provide
	exactly one system-controlled RIB per routing-instance and
	supported address family and make them also the default
	RIBs. These RIBs then appear as entries of the list
	/routing-state/routing-instance/ribs/rib.</h:p>
    </text>
    </description>
  </feature>

  <feature name="router-id">
    <description>
      <text>
	<h:p>This feature indicates that the server supports
	configuration of an explicit 32-bit router ID that is used by
	some routing protocols.</h:p>
	<h:p>Servers that do not advertise this feature set a router
	ID algorithmically, usually to one of configured IPv4
	addresses. However, this algorithm is
	implementation-specific.</h:p>
      </text>
    </description>
  </feature>

  <!-- Identities -->

  <identity name="address-family">
    <description>
      <text>Base identity from which identities describing address
      families are derived.</text>
    </description>
  </identity>

  <identity name="ipv4">
    <base name="address-family"/>
    <description>
      <text>This identity represents IPv4 address family.</text>
    </description>
  </identity>

  <identity name="ipv6">
    <base name="address-family"/>
    <description>
      <text>This identity represents IPv6 address family.</text>
    </description>
  </identity>

  <identity name="routing-instance">
    <description>
      <text>
        Base identity from which identities describing routing
        instance types are derived.
      </text>
    </description>
  </identity>

  <identity name="default-routing-instance">
    <base name="routing-instance"/>
    <description>
      <text>This identity represents either a default routing
      instance, or the only routing instance on systems that do not
      support multiple instances.</text>
    </description>
  </identity>

  <identity name="vrf-routing-instance">
    <base name="routing-instance"/>
    <description>
      <text>This identity represents a VRF routing instance. The
      type is distinct from the default-routing-instance. There may
      be multiple vrf-routing-interfaces.</text>
    </description>
  </identity>

  <identity name="routing-protocol">
    <description>
      <text>
        Base identity from which routing protocol identities are
        derived.
      </text>
    </description>
  </identity>
  <identity name="direct">
    <base name="routing-protocol"/>
    <description>
      <text>
        Routing pseudo-protocol that provides routes to directly
        connected networks.
      </text>
    </description>
  </identity>
  <identity name="static">
    <base name="routing-protocol"/>
    <description>
      <text>Static routing pseudo-protocol.</text>
    </description>
  </identity>

  <!-- Type Definitions -->

  <typedef name="routing-instance-ref">
    <type name="leafref">
      <path value="/rt:routing/rt:routing-instance/rt:name"/>
    </type>
    <description>
      <text>
        This type is used for leafs that reference a routing instance
        configuration.
      </text>
    </description>
  </typedef>

  <typedef name="routing-instance-state-ref">
    <type name="leafref">
      <path value="/rt:routing-state/rt:routing-instance/rt:name"/>
    </type>
    <description>
      <text>
        This type is used for leafs that reference state data of a
        routing instance.
      </text>
    </description>
  </typedef>

  <typedef name="route-preference">
    <type name="uint32"/>
    <description>
      <text>This type is used for route preferences.</text>
    </description>
  </typedef>

  <!-- Groupings -->

  <grouping name="address-family">
    <leaf name="address-family">
      <type name="identityref">
	<base name="address-family"/>
      </type>
      <mandatory value="true"/>
      <description>
        <text>
          Address family.
        </text>
      </description>
    </leaf>
    <description>
      <text>This grouping provides a leaf identifying an address
      family.</text>
    </description>
  </grouping>

  <grouping name="router-id">
    <leaf name="router-id">
      <type name="yang:dotted-quad"/>
      <description>
	<text>
	  A 32-bit number in the form of a dotted quad that is used by
	  some routing protocols identifying a router.
	</text>
      </description>
      <reference>
	<text>
	  RFC 2328: OSPF Version 2.
	</text>
      </reference>
    </leaf>
    <description>
      <text>
	This grouping provides router ID.
      </text>
    </description>
  </grouping>


  <grouping name="special-next-hop">
    <description>
      <text>
	This grouping provides a leaf with an enumeration of special
	next-hops.
      </text>
    </description>
    <leaf name="special-next-hop">
      <type name="enumeration">
	<enum name="blackhole">
	  <description>
	    <text>Silently discard the packet.</text>
	  </description>
	</enum>
	<enum name="unreachable">
	  <description>
	    <text>Discard the packet and notify the sender with an
	    error message indicating that the destination host is
	    unreachable.</text>
	  </description>
	</enum>
	<enum name="prohibit">
	  <description>
	    <text>Discard the packet and notify the sender with an
	    error message indicating that the communication is
	    administratively prohibited.</text>
	  </description>
	</enum>
	<enum name="receive">
	  <description>
	    <text>The packet will be received by the local
	    system.</text>
	  </description>
	</enum>
      </type>
      <description>
	<text>Special next-hop options.</text>
      </description>
    </leaf>
  </grouping>

  <grouping name="next-hop-content">
    <description>
      <text>Generic parameters of next-hops in static routes.</text>
    </description>
    <choice name="next-hop-options">
      <mandatory value="true"/>
      <description>
	<text>
	  <h:p>Options for next-hops in static routes.</h:p>
	  <h:p>Modules for address families MUST augment this choice
	  with the 'next-hop-address' case/leaf that allows for
	  specifying a gateway address.</h:p>
	  <h:p>It is expected that further cases will be added through
	  augments from other modules, e.g., for Equal-Cost Multipath
	  routing (ECMP).</h:p>
	</text>
      </description>
      <leaf name="outgoing-interface">
	<type name="leafref">
	  <path value="/rt:routing/rt:routing-instance/rt:interfaces/rt:interface"/>
	</type>
	<description>
	  <text>
	    Name of the outgoing interface.
	  </text>
	</description>
      </leaf>
      <case name="special-next-hop">
	<uses name="special-next-hop"/>
      </case>
    </choice>
  </grouping>

  <grouping name="next-hop-state-content">
    <description>
      <text>Generic parameters of next-hops in state data.</text>
    </description>
    <choice name="next-hop-options">
      <mandatory value="true"/>
      <description>
	<text>
	  <h:p>Options for next-hops in state data.</h:p>
	  <h:p>Modules for address families MUST augment this choice
	  with the 'next-hop-address' case/leaf that allows for
	  specifying a gateway address.</h:p>
	  <h:p>It is expected that further cases will be added through
	  augments from other modules, e.g., for ECMP or recursive
	  next-hops.</h:p>
	</text>
      </description>
      <leaf name="outgoing-interface">
	<type name="leafref">
	  <path value="/rt:routing-state/rt:routing-instance/rt:interfaces/rt:interface"/>
	</type>
	<description>
	  <text>
	    Name of the outgoing interface.
	  </text>
	</description>
      </leaf>
      <case name="special-next-hop">
	<uses name="special-next-hop"/>
      </case>
    </choice>
  </grouping>

  <grouping name="route-metadata">
    <description>
      <text>Common route metadata.</text>
    </description>
    <leaf name="source-protocol">
      <type name="identityref">
	<base name="routing-protocol"/>
      </type>
      <mandatory value="true"/>
      <description>
	<text>
	  Type of the routing protocol from which the route
	  originated.
	</text>
      </description>
    </leaf>
    <leaf name="active">
      <type name="empty"/>
      <description>
	<text>
	  Presence of this leaf indicates that the route is preferred
	  among all routes in the same RIB that have the same
	  destination prefix.
	</text>
      </description>
    </leaf>
    <leaf name="last-updated">
      <type name="yang:date-and-time"/>
      <description>
	<text>
	  Time stamp of the last modification of the route.
	  If the route was never modified, it is the time when
	  the route was inserted into the RIB.
	</text>
      </description>
    </leaf>
  </grouping>

  <!-- State data -->

  <augment target-node="/if:interfaces-state/if:interface">
    <description>
      <text>
	This augment adds a wrapped leaf-list to interface state data.
      </text>
    </description>
    <leaf name="routing-instance">
      <type name="routing-instance-state-ref"/>
      <description>
	<text>
	  The name of the routing instance to which the interface is
	  assigned.
	</text>
      </description>
      <must condition="../if:name=/rt:routing-state/rt:routing-instance[rt:name=current()]/rt:interfaces/rt:interface">
	<description>
	  <text>
	    The reference must mirror a corresponding assignment
	    under routing-instance.
	  </text>
	</description>
	<error-message>
	  <value>
	    The interface is not assigned to the routing instance.
	  </value>
	</error-message>
      </must>
    </leaf>
  </augment>

  <container name="routing-state">
    <description>
      <text>State data of the routing subsystem.</text>
    </description>
    <config value="false"/>
    <list name="routing-instance">
      <min-elements value="1"/>
      <key value="name"/>
      <description>
        <text>
          <h:p>Each list entry is a container for state
          data of a routing instance.</h:p>
	  <h:p>An implementation MUST support routing instance(s) of
	  the type 'rt:default-routing-instance', and MAY support
	  other types. An implementation MAY restrict the number of
	  routing instances of each supported type.</h:p>
	  <h:p>An implementation SHOULD create at least one
	  system-controlled instance, and MAY allow the clients to
	  create user-controlled routing instances in
	  configuration.</h:p>
        </text>
      </description>
      <leaf name="name">
        <type name="string"/>
        <description>
          <text>
	    <h:p>The name of the routing instance.</h:p>
	    <h:p>For system-controlled instances the name is
	    persistent, i.e., it SHOULD NOT change across
	    reboots.</h:p>
	  </text>
        </description>
      </leaf>
      <leaf name="type">
        <type name="identityref">
          <base name="routing-instance"/>
        </type>
        <description>
          <text>
            The routing instance type.
          </text>
        </description>
      </leaf>
      <uses name="router-id">
	<description>
	  <text>
	    <h:p>Global router ID.</h:p>
	    <h:p>It may be either configured or assigned
	    algorithmically by the implementation.</h:p>
	  </text>
	</description>
      </uses>
      <container name="interfaces">
        <description>
          <text>
            Network layer interfaces belonging to the routing instance.
          </text>
        </description>
        <leaf-list name="interface">
          <description>
            <text>
	      Each entry is a reference to the name of a configured
	      network layer interface.
	    </text>
          </description>
          <type name="if:interface-state-ref"/>
	</leaf-list>
      </container>
      <container name="routing-protocols">
        <description>
          <text>
            Container for the list of routing protocol instances.
          </text>
        </description>
        <list name="routing-protocol">
          <key value="type name"/>
          <description>
            <text>
	      <h:p>State data of a routing protocol instance.</h:p>
	      <h:p>An implementation MUST provide exactly one
	      system-controlled instance of the type 'direct'. Other
	      instances MAY be created by configuration.</h:p>
	    </text>
          </description>
          <leaf name="type">
            <type name="identityref">
              <base name="routing-protocol"/>
            </type>
            <description>
              <text>
                Type of the routing protocol.
              </text>
            </description>
          </leaf>
          <leaf name="name">
            <type name="string"/>
            <description>
              <text>
	      <h:p>The name of the routing protocol instance.</h:p>
	      <h:p>For system-controlled instances this name is
	      persistent, i.e., it SHOULD NOT change across
	      reboots.</h:p>
	      </text>
            </description>
          </leaf>
        </list>
      </container>
      <container name="ribs">
	<description>
          <text>Container for RIBs.</text>
	</description>
	<list name="rib">
          <key value="name"/>
	  <min-elements value="1"/>
          <description>
            <text>
              <h:p>Each entry represents a RIB identified by the
              'name' key. All routes in a RIB MUST belong to the
              same address family.</h:p>
	      <h:p>For each routing instance, an implementation SHOULD
	      provide one system-controlled default RIB for each
	      supported address family.</h:p>
            </text>
          </description>
          <leaf name="name">
            <type name="string"/>
            <description>
              <text>The name of the RIB.</text>
            </description>
          </leaf>
          <uses name="address-family"/>
	  <leaf name="default-rib">
	    <if-feature name="multiple-ribs"/>
	    <type name="boolean"/>
	    <default value="true"/>
	    <description>
	      <text>
		<h:p>This flag has the value of 'true' if and only if
		the RIB is the default RIB for the given address
		family.</h:p>
		<h:p>A default RIB always receives direct routes. By
		default it also receives routes from all routing
		protocols.</h:p>
	      </text>
	    </description>
	  </leaf>
          <container name="routes">
            <description>
              <text>
		Current content of the RIB.
              </text>
            </description>
            <list name="route">
              <description>
		<text>
                  A RIB route entry. This data node MUST be augmented
                  with information specific for routes of each address
                  family.
		</text>
              </description>
	      <leaf name="route-preference">
		<type name="route-preference"/>
		<description>
		  <text>
		    This route attribute, also known as administrative
		    distance, allows for selecting the preferred route
		    among routes with the same destination prefix. A
		    smaller value means a more preferred route.
		  </text>
		</description>
	      </leaf>
	      <container name="next-hop">
		<uses name="next-hop-state-content"/>
		<description>
		  <text>Route's next-hop attribute.</text>
		</description>
	      </container>
	      <uses name="route-metadata"/>
            </list>
          </container>
	</list>
      </container>
    </list>
  </container>

  <!-- Configuration Data -->

  <container name="routing">
    <description>
      <text>Configuration parameters for the routing subsystem.</text>
    </description>
    <list name="routing-instance">
      <key value="name"/>
      <description>
        <text>
          <h:p>Configuration of a routing instance.</h:p>
        </text>
      </description>
      <leaf name="name">
        <type name="string"/>
        <description>
          <text>
	    <h:p>The name of the routing instance.</h:p>
	    <h:p>For system-controlled entries, the value of this leaf
	    must be the same as the name of the corresponding entry in
	    state data.</h:p>
	    <h:p>For user-controlled entries, an arbitrary name can be
	    used.</h:p>
	  </text>
        </description>
      </leaf>
      <leaf name="type">
        <type name="identityref">
          <base name="routing-instance"/>
        </type>
        <default value="rt:default-routing-instance"/>
        <description>
          <text>The type of the routing instance.</text>
        </description>
      </leaf>
      <leaf name="enabled">
        <type name="boolean"/>
        <default value="true"/>
        <description>
          <text>
            <h:p>Enable/disable the routing instance.</h:p>
            <h:p>If this parameter is false, the parent routing
            instance is disabled and does not appear in
	    state data, despite any other configuration that
            might be present.</h:p>
          </text>
        </description>
      </leaf>
      <uses name="router-id">
	<if-feature name="router-id"/>
	<description>
	  <text>
	    Configuration of the global router ID. Routing protocols
	    that use router ID can use this parameter or override it
	    with another value.</text>
	</description>
      </uses>
      <leaf name="description">
        <type name="string"/>
        <description>
          <text>Textual description of the routing instance.</text>
        </description>
      </leaf>
      <container name="interfaces">
        <description>
          <text>
            Assignment of the routing instance's interfaces.
          </text>
        </description>
        <leaf-list name="interface">
          <description>
            <text>
              The name of a configured network layer interface to be
              assigned to the routing-instance.
            </text>
          </description>
          <type name="if:interface-ref"/>
	</leaf-list>
      </container>
      <container name="routing-protocols">
        <description>
          <text>
            Configuration of routing protocol instances.
          </text>
        </description>
        <list name="routing-protocol">
          <key value="type name"/>
          <description>
            <text>Each entry contains configuration of a routing protocol instance.</text>
          </description>
          <leaf name="type">
            <type name="identityref">
              <base name="routing-protocol"/>
            </type>
            <description>
              <text>
                Type of the routing protocol - an identity derived
                from the 'routing-protocol' base identity.
              </text>
            </description>
          </leaf>
          <leaf name="name">
            <type name="string"/>
            <description>
              <text>An arbitrary name of the routing protocol
              instance.</text>
            </description>
          </leaf>
          <leaf name="description">
            <type name="string"/>
            <description>
              <text>
                Textual description of the routing protocol instance.
              </text>
            </description>
          </leaf>
          <container name="static-routes">
            <when condition="../type='rt:static'">
              <description>
                <text>
                  This container is only valid for the 'static'
                  routing protocol.
                </text>
              </description>
            </when>
            <description>
              <text>
                <h:p>Configuration of the 'static'
                pseudo-protocol.</h:p>
                <h:p>Address-family-specific modules augment this node
                with their lists of routes.</h:p>
              </text>
            </description>
          </container>
        </list>
      </container>
      <container name="ribs">
	<description>
          <text>Configuration of RIBs.</text>
	</description>
	<list name="rib">
          <key value="name"/>
          <description>
            <text>
              <h:p>Each entry contains configuration for a RIB
              identified by the 'name' key.</h:p>
	      <h:p>Entries having the same key as a system-controlled
	      entry of the list
	      /routing-state/routing-instance/ribs/rib are used for
	      configuring parameters of that entry. Other entries
	      define additional user-controlled RIBs.</h:p>
            </text>
          </description>
          <leaf name="name">
            <type name="string"/>
            <description>
              <text>
		<h:p>The name of the RIB.</h:p>
		<h:p>For system-controlled entries, the value of this
		leaf must be the same as the name of the corresponding
		entry in state data.</h:p>
		<h:p>For user-controlled entries, an arbitrary name can
		be used.</h:p>
	      </text>
            </description>
          </leaf>
          <uses name="address-family">
	    <refine target-node="address-family">
	      <mandatory value="false"/>
	    </refine>
	    <description>
	      <text>
		<h:p>Address family of the RIB.</h:p>
		<h:p>It is mandatory for user-controlled RIBs. For
		system-controlled RIBs it can be omitted, otherwise it
		must match the address family of the corresponding
		state entry.</h:p>
	      </text>
	    </description>
	  </uses>
          <leaf name="description">
            <type name="string"/>
            <description>
              <text>Textual description of the RIB.</text>
            </description>
          </leaf>
	</list>
      </container>
    </list>
  </container>

  <!-- RPC operations -->

  <rpc name="fib-route">
    <description>
      <text>
        <h:p>Return the active FIB route that a routing-instance uses
        for sending packets to a destination address.</h:p>
      </text>
    </description>
    <input>
      <leaf name="routing-instance-name">
        <type name="routing-instance-state-ref"/>
        <mandatory value="true"/>
        <description>
          <text>
	    <h:p>Name of the routing instance whose forwarding
	    information base is being queried.</h:p>
	    <h:p>If the routing instance with name equal to
	    the value of this parameter doesn't exist, then this operation
	    SHALL fail with error-tag 'data-missing' and error-app-tag
	    'routing-instance-not-found'.</h:p>
          </text>
        </description>
      </leaf>
      <container name="destination-address">
        <uses name="address-family"/>
        <description>
          <text>
            <h:p>
              Network layer destination address.
            </h:p>
            <h:p>
              Address family specific modules MUST augment this
              container with a leaf named 'address'.
            </h:p>
          </text>
        </description>
      </container>
    </input>
    <output>
      <container name="route">
        <uses name="address-family"/>
	<container name="next-hop">
          <uses name="next-hop-state-content"/>
	  <description>
	    <text>Route's next-hop attribute.</text>
	  </description>
	</container>
	<uses name="route-metadata"/>
        <description>
          <text>
            <h:p>The active FIB route for the specified destination.</h:p>
            <h:p>If the routing instance has no active FIB route for the
            destination address, no output is returned - the server
            SHALL send an &lt;rpc-reply&gt; containing a single
            element &lt;ok&gt;.</h:p>
            <h:p>Address family specific modules MUST augment
            this list with appropriate route contents.</h:p>
          </text>
        </description>
      </container>
    </output>
  </rpc>

</module>
